/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import dao.BilgiDao;
import entity.BilgiDekorasyon;
import entity.KiralikBilgi;
import entity.SatilikBilgi;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author m07er
 */
public class BilgiPanel extends javax.swing.JFrame {

    /**
     * Creates new form BilgiPanel
     */
    DefaultTableModel tablo = new DefaultTableModel();
    BilgiDao bilgiDao = new BilgiDao();
    BilgiDekorasyon bilgi;

    public BilgiPanel() {
        initComponents();
        this.setLocationRelativeTo(null);
        bilgi_id.setVisible(false);
        listele();
        cbBilgiTur.addItem("Kiralık");
        cbBilgiTur.addItem("Satılık");
    }

    void listele() {
        this.tablo = (DefaultTableModel) bilgiListe.getModel();
        this.tablo.setRowCount(0);
        Object[] row = new Object[3];
        for (int i = 0; i < bilgiDao.list().size(); i++) {
            row[0] = bilgiDao.list().get(i).getBilgi_id();
            row[1] = bilgiDao.list().get(i).getBilgi_kategori();
            row[2] = bilgiDao.list().get(i).getBilgi_tur();
            tablo.addRow(row);
        }

        bilgiListe.setModel(tablo);
    }

    void temizle() {

        kategoritf.setText(null);
        cbBilgiTur.setSelectedIndex(0);
        this.tablo.setRowCount(0);
    }

    void duzenle() {

        String bkategori = kategoritf.getText();
        String btur = String.valueOf(cbBilgiTur.getSelectedItem());

        boolean kontrol = false;
        for (int i = 0; i < this.bilgiDao.list().size(); i++) {
            if (bkategori.equalsIgnoreCase(this.bilgiDao.list().get(i).getBilgi_kategori()) && btur.equalsIgnoreCase(this.bilgiDao.list().get(i).getBilgi_tur())) {
                kontrol = true;
            }
        }
        if (kontrol) {
            JOptionPane.showMessageDialog(rootPane, "Listede aynı değerler mevcut.Lütfen farklı değerler deneyiniz!");
        } else {
            if (btur.equalsIgnoreCase("Kiralık")) {
                bilgi = new KiralikBilgi();
                this.bilgi.setBilgi_kategori(bkategori);
                this.bilgi.setBilgi_id(Long.parseLong(bilgi_id.getText()));
                this.bilgiDao.update(this.bilgi);
            } else if (btur.equalsIgnoreCase("Satılık")) {
                bilgi = new SatilikBilgi();
                this.bilgi.setBilgi_kategori(bkategori);
                this.bilgi.setBilgi_id(Long.parseLong(bilgi_id.getText()));
                this.bilgiDao.update(this.bilgi);
            } else {
                JOptionPane.showMessageDialog(rootPane, "Olmaz, Olamaz...");
            }

        }

    }

    void ekle() {
        String bkategori = kategoritf.getText();
        String btur = String.valueOf(cbBilgiTur.getSelectedItem());

        boolean kontrol = false;
        if (bkategori.equalsIgnoreCase("") || btur.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(rootPane, "Lütfen boş alanları doldurunuz.");
        } else {
            for (int i = 0; i < this.bilgiDao.list().size(); i++) {
                if (bkategori.equalsIgnoreCase(this.bilgiDao.list().get(i).getBilgi_kategori()) && btur.equalsIgnoreCase(this.bilgiDao.list().get(i).getBilgi_tur())) {
                    kontrol = true;
                }
            }
            if (kontrol) {
                JOptionPane.showMessageDialog(rootPane, "Listede aynı değerler zaten var.Lütfen farklı değerler deneyiniz!");
            } else {

                if (btur.equalsIgnoreCase("Kiralık")) {
                    bilgi = new KiralikBilgi();
                    this.bilgi.setBilgi_kategori(bkategori);
                    this.bilgiDao.create(this.bilgi);
                } else if (btur.equalsIgnoreCase("Satılık")) {
                    bilgi = new SatilikBilgi();
                    this.bilgi.setBilgi_kategori(bkategori);
                    this.bilgiDao.create(this.bilgi);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Olmaz, Olamaz...");
                }
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        kategoritf = new javax.swing.JTextField();
        ekleButton = new javax.swing.JButton();
        duzenleButton = new javax.swing.JButton();
        silButton = new javax.swing.JButton();
        listeleButton = new javax.swing.JButton();
        temizleButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        bilgiListe = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        bilgi_id = new javax.swing.JLabel();
        cbBilgiTur = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel1.setText("Bilgi türü");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel2.setText("Bilgi Kategorisi");

        ekleButton.setText("Ekle");
        ekleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ekleButtonActionPerformed(evt);
            }
        });

        duzenleButton.setText("Duzenle");
        duzenleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duzenleButtonActionPerformed(evt);
            }
        });

        silButton.setText("Sil");
        silButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                silButtonActionPerformed(evt);
            }
        });

        listeleButton.setText("Listele");
        listeleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listeleButtonActionPerformed(evt);
            }
        });

        temizleButton.setText("Temizle");
        temizleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                temizleButtonActionPerformed(evt);
            }
        });

        bilgiListe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bilgi ID", "Bilgi Kategorisi", "Bilgi Türü"
            }
        ));
        bilgiListe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bilgiListeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(bilgiListe);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 102, 255));
        jLabel3.setText("Geri dönmek için tıklayınız.");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(bilgi_id)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(temizleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(silButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(listeleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ekleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(duzenleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(cbBilgiTur, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(kategoritf, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kategoritf, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(cbBilgiTur)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ekleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(duzenleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(silButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(listeleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(bilgi_id)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(temizleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel3)))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ekleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ekleButtonActionPerformed
        // TODO add your handling code here:
        ekle();
        listele();
    }//GEN-LAST:event_ekleButtonActionPerformed

    private void duzenleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duzenleButtonActionPerformed
        // TODO add your handling code here:
        duzenle();
        listele();
    }//GEN-LAST:event_duzenleButtonActionPerformed

    private void silButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_silButtonActionPerformed
        // TODO add your handling code here:
        bilgi.setBilgi_id(Long.parseLong(bilgi_id.getText()));
        bilgiDao.delete(this.bilgi);
        temizle();
        listele();
    }//GEN-LAST:event_silButtonActionPerformed

    private void listeleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listeleButtonActionPerformed
        // TODO add your handling code here:
        listele();
    }//GEN-LAST:event_listeleButtonActionPerformed

    private void temizleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_temizleButtonActionPerformed
        // TODO add your handling code here:
        temizle();
    }//GEN-LAST:event_temizleButtonActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        IslemPanel islemPanel = new IslemPanel();
        islemPanel.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel3MouseClicked

    private void bilgiListeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bilgiListeMouseClicked
        // TODO add your handling code here:
        int i = bilgiListe.getSelectedRow();
        TableModel model = bilgiListe.getModel();
        bilgi_id.setText(String.valueOf(bilgiListe.getValueAt(bilgiListe.getSelectedRow(), 0)));
        kategoritf.setText(model.getValueAt(i, 1).toString());
        cbBilgiTur.setSelectedItem(bilgiListe.getValueAt(bilgiListe.getSelectedRow(), 2));
    }//GEN-LAST:event_bilgiListeMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BilgiPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BilgiPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BilgiPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BilgiPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BilgiPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bilgiListe;
    private javax.swing.JLabel bilgi_id;
    private javax.swing.JComboBox<String> cbBilgiTur;
    private javax.swing.JButton duzenleButton;
    private javax.swing.JButton ekleButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField kategoritf;
    private javax.swing.JButton listeleButton;
    private javax.swing.JButton silButton;
    private javax.swing.JButton temizleButton;
    // End of variables declaration//GEN-END:variables
}
